from requests import Session
from requests.exceptions import ConnectionError, Timeout, TooManyRedirects
import json 
import pandas as pd
import os
from time import sleep
import seaborn as sns

url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest'

parameters = {
    'start':'1',
    'limit':'15',
    'convert':'USD'
}

headers = {
    'Accepts': 'application/json',
    'X-CMC_PRO_API_KEY': '0ad53085-1cb2-4eb8-ad9e-3ffbd7e56509'
}

session = Session()
session.headers.update(headers)

try:
    response = session.get(url, params=parameters)
    data = json.loads(response.text)
    
except (ConnectionError, Timeout, TooManyRedirects) as e:
    print(e)
    
type(data)

df = pd.json_normalize(data['data'])
df['timestamp'] = pd.to_datetime('now')

def api_runner():
    global df
    url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest'
   
    parameters = {
        'start':'1',
        'limit':'15',
        'convert':'USD'
    }

    headers = {
        'Accepts': 'application/json',
        'X-CMC_PRO_API_KEY': '0ad53085-1cb2-4eb8-ad9e-3ffbd7e56509'
    }

    session = Session()
    session.headers.update(headers)

    try:
        response = session.get(url, params=parameters)
        data = json.loads(response.text)
    except (ConnectionError, Timeout, TooManyRedirects) as e:
        print(e)
        
    df = pd.json_normalize(data['data'])
    df['timestamp'] = pd.to_datetime('now')
    
    if not os.path.isfile("C:\\Users\\DELL\\.spyder-py3\\API.csv"):
        df.to_csv("C:\\Users\\DELL\\.spyder-py3\\API.csv", header='column_names')
    else:
        df.to_csv("C:\\Users\\DELL\\.spyder-py3\\API.csv", mode ='a', header = False)     

      

for i in range(3):
    api_runner()
    print('API Runner Competed')
    sleep(10)
exit()

df3= pd.read_csv("C:\\Users\\DELL\\.spyder-py3\\API.csv")
pd.set_option('display.float_format', lambda x: '%.3f' % x)
result_df = df3.groupby('name', sort=False)[['quote.USD.percent_change_1h',
                                              'quote.USD.percent_change_24h',
                                              'quote.USD.percent_change_7d',
                                              'quote.USD.percent_change_30d']].mean()


df4 = result_df.stack()
df5 = df4.to_frame(name='values')
df6 = df5.reset_index()
df7 = df6.rename(columns={'level_1':'percentage_change'})
df7['percentage_change'] = df7['percentage_change'].replace(['quote.USD.percent_change_1h',
                                              'quote.USD.percent_change_24h',
                                              'quote.USD.percent_change_7d',
                                              'quote.USD.percent_change_30d'], ['1h','24h','7d','30d'])

sns.catplot(x='percentage_change', y ='values', hue='name', data=df7, kind='point')

df8 = df3[['name','quote.USD.price','timestamp']]
df8 = df8.query("name == 'Bitcoin'")


sns.set_theme(style = "darkgrid")
sns.lineplot(x='timestamp', y='quote.USD.price', data = df8)
